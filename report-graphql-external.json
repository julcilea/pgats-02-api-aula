{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-09-06T20:13:23.706Z",
    "end": "2025-09-06T20:13:23.784Z",
    "duration": 78,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "65dd5111-59a8-46d3-994e-f9cc433f4f4c",
      "title": "",
      "fullFile": "/home/runner/work/pgats-02-api-aula/pgats-02-api-aula/test/graphql/external/transferGraphQLExternal.test.js",
      "file": "/test/graphql/external/transferGraphQLExternal.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "25bcad57-62ea-4438-9c9a-643fee864aa6",
          "title": "GraphQL Transfer Mutations external",
          "fullFile": "/home/runner/work/pgats-02-api-aula/pgats-02-api-aula/test/graphql/external/transferGraphQLExternal.test.js",
          "file": "/test/graphql/external/transferGraphQLExternal.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GraphQL Transfer Mutations external\"",
              "fullTitle": "GraphQL Transfer Mutations external \"before all\" hook in \"GraphQL Transfer Mutations external\"",
              "timedOut": false,
              "duration": 61,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginUser = require('../fixture/require/login/loginUser.json');\nconst resposta = await request(process.env.BASE_URL_GRAPHQL)\n  .post('')\n  .send(loginUser);\nif (resposta.body.errors) {\n  console.error('Erro ao fazer login:', resposta.body.errors);\n  throw new Error('Falha no login, verifique os dados de login ou o userService.js');\n}\ntoken = resposta.body.data.loginUser.token;",
              "err": {},
              "uuid": "c36bd53a-ea95-4894-aa09-e8b8abaec24a",
              "parentUUID": "25bcad57-62ea-4438-9c9a-643fee864aa6",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"GraphQL Transfer Mutations external\"",
              "fullTitle": "GraphQL Transfer Mutations external \"before each\" hook in \"GraphQL Transfer Mutations external\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createTransfer = require('../fixture/require/transfer/createTransfer.json');",
              "err": {},
              "uuid": "291877dc-1c6a-4ec4-86c9-685e72eb8ab5",
              "parentUUID": "25bcad57-62ea-4438-9c9a-643fee864aa6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validar que transferencia entre dois usuarios com sucesso",
              "fullTitle": "GraphQL Transfer Mutations external Validar que transferencia entre dois usuarios com sucesso",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responsaEsperada = require('../fixture/response/transfer/ValidarQueTransferenciaEntreDoisUsuariosComSucesso.json');\nconst respostaTransferencia = await request(process.env.BASE_URL_GRAPHQL)\n  .post('')\n  .set('Authorization', `Bearer ${token}`)\n  .send(createTransfer);\nexpect(respostaTransferencia.status).to.equal(200);\nexpect(respostaTransferencia.body.data.createTransfer).excluding('date').to.deep.equal(responsaEsperada.data.createTransfer);",
              "err": {},
              "uuid": "adc0ef36-8b2b-401a-84bb-d5b8ebc4eee2",
              "parentUUID": "25bcad57-62ea-4438-9c9a-643fee864aa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validar que não é possivel transferir de uma conta sem saldo suficiente",
              "fullTitle": "GraphQL Transfer Mutations external Validar que não é possivel transferir de uma conta sem saldo suficiente",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createTransfer.variables.value = 10000.01;\nconst responsaEsperada = require('../fixture/response/transfer/ValidarNaoEPossivelTransferirDeUmaContaSemSaldoSuficiente.json');\nconst respostaTransferencia = await request(process.env.BASE_URL_GRAPHQL)\n  .post('')\n  .set('Authorization', `Bearer ${token}`)\n  .send(createTransfer);\nexpect(respostaTransferencia.status).to.equal(200);\nexpect(respostaTransferencia.body.errors[0].message).to.deep.equal(responsaEsperada.errors[0].message);",
              "err": {},
              "uuid": "3d9758f6-3166-4a54-b5a7-db2bc7967e46",
              "parentUUID": "25bcad57-62ea-4438-9c9a-643fee864aa6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "adc0ef36-8b2b-401a-84bb-d5b8ebc4eee2",
            "3d9758f6-3166-4a54-b5a7-db2bc7967e46"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report-graphql-external",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "./",
        "reportFilename": "report-graphql-external",
        "overwrite": "true",
        "html": "true",
        "json": "true"
      },
      "version": "6.2.0"
    }
  }
}